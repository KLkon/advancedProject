<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">

    <!--<bean id="druidConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--&lt;!&ndash;RabbitMQ配置&ndash;&gt;-->
            <!--<value>classpath:myrabbitMQ.properties</value>-->
        <!--</property>-->
    <!--</bean>-->


    <!-- RabbitMQ 配置 -->
    <!--连接-->
    <rabbit:connection-factory id="connectionFactory" virtual-host="${rmq.virtualhost}" host="${rmq.ip}" username="${rmq.manager.user}"
                               password="${rmq.manager.password}" />

    <!--生产者中的 exchange 和 Queue 在rabbitMQ服务器中自动生成-->
    <rabbit:admin connection-factory="connectionFactory" />
    <!-- 声明消息队列，消息系统监听队列 -->
    <!-- messageQueue 是在（1）中创建的队列 -->
    <!--定义queue  说明：durable:是否持久化 exclusive: 仅创建者可以使用的私有队列，断开后自动删除 auto_delete: 当所有消费客户端连接断开后，是否自动删除队列-->
    <rabbit:queue id="epcaQueue" durable="true"
                  auto-delete="false" exclusive="false" name="${rmq.routeKey}" />

    <!-- exchange queue binging key 绑定 -->
    <!--声明交换 在（1）配置的交换-->
    <rabbit:topic-exchange id="epcaExchange"
                           durable="true" auto-delete="false" name="${rmq.exchange}">
        <rabbit:bindings>
            <!-- 声明队列和交换的关系 -->
            <rabbit:binding pattern="message.*" queue="epcaQueue"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>
    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="rabbitTemplate" exchange="${rmq.exchange}"
                     connection-factory="connectionFactory" />

    <!--Rabbit监听类-->
    <bean id="rabbitListenerContainerFactory" class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>
    <!--开启RabbitMQ注解-->
    <rabbit:annotation-driven />

    <!--<rabbit:listener-container-->
    <!--connection-factory="connectionFactory" acknowledge="auto">-->
    <!--&lt;!&ndash; 让消费者监听这个队列 &ndash;&gt;-->
    <!--<rabbit:listener ref="messageConsumer" queues="${rmq.routeKey}" />-->
    <!--</rabbit:listener-container>-->
    <!--声明生产者 -->
    <!--<bean id="messageSender" class="com.hb.epca.web.controller.mymq.MessageSender">-->
    <!--<property name="amqpTemplate" ref="rabbitTemplate"></property>-->
    <!--&lt;!&ndash; <property name="routingKey" value="message.test" ></property> &ndash;&gt;-->
    <!--</bean>-->

    <!--声明消费者 -->
    <!--<bean id="messageConsumer" class="com.hb.epca.web.controller.mymq.MessageConsumer" />-->
</beans>